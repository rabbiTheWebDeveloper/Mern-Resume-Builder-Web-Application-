{"version":3,"file":"static/js/375.ef0bc74c.chunk.js","mappings":"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","sources":["APIRequest/UserRequest.js","components/EditProfile/OtherInformation/Specialization.jsx","components/EditProfile/OtherInformation/LanguageProficiency.jsx","components/EditProfile/OtherInformation/References.jsx","components/EditProfile/OtherInformation/OtherInformation.jsx","components/EditProfile/EditProfile.jsx"],"sourcesContent":["//Internal Import\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/UserSlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass UserRequest {\r\n  static async UserDetails() {\r\n    const { data } = await RestClient.getRequest(\"/User/UserDetails\");\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(Email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/SendRecoveryOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      SessionHelper.SetOtpEmail(Email);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(Otp) {\r\n    const Email = SessionHelper.GetOtpEmail();\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyRecoveryOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.SetOtpCode(Otp);\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(PostBody) {\r\n    const Email = SessionHelper.GetOtpEmail();\r\n    const Otp = SessionHelper.GetOtpCode();\r\n    const { data } = await RestClient.postRequest(\r\n      `/User/RecoveryResetPass/${Email}/${Otp}`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountSentOtp() {\r\n    const Email = SessionHelper.GetVerifyEmail();\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountSentOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountVerifyOtp(Email, Otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountVerifyOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserUpdate(PostBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/User/UserUpdate`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async UserChangePassword(PostBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      `/User/UserChangePassword`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserRequest;\r\n","//External Lib Import\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Field, FieldArray, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport parse from \"html-react-parser\";\r\n\r\n//Internal Lib Import\r\nimport UserRequest from \"../../../APIRequest/UserRequest\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  Specialization: Yup.array().of(\r\n    Yup.object().shape({\r\n      Skill: Yup.string().required(\"Skill is Required\"),\r\n      HowDidYouLearn: Yup.string().required(\"HowDidYouLearn is Required\"),\r\n    }),\r\n  ),\r\n});\r\n\r\nconst Specialization = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const { UserDetails } = useSelector((state) => state.User);\r\n\r\n  const ModalForm = () => {\r\n    return (\r\n      <>\r\n        <div className={show ? \"fade modal-backdrop show\" : \"\"}></div>\r\n        <div\r\n          className={\r\n            show\r\n              ? \"modal fade modal-education d-block show\"\r\n              : \"modal fade modal-education\"\r\n          }\r\n          id=\"modal-education\"\r\n          style={{ paddingRight: 17 }}\r\n        >\r\n          <div\r\n            className=\"modal-dialog\"\r\n            role=\"document\"\r\n            style={{ transform: \"none\" }}\r\n          >\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  enableReinitialize\r\n                  initialValues={UserDetails}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={(values, actions) => {\r\n                    UserRequest.UserUpdate(values).then((result) => {\r\n                      if (result) {\r\n                        UserRequest.UserDetails().then((result) => {\r\n                          if (result) {\r\n                            setShow(false);\r\n                          }\r\n                        });\r\n                      }\r\n                    });\r\n                  }}\r\n                >\r\n                  {(props) => (\r\n                    <Form>\r\n                      <FieldArray\r\n                        name=\"Specialization\"\r\n                        render={(arrayHelpers) => (\r\n                          <div>\r\n                            <div className=\"title\">\r\n                              <h4>\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width={24}\r\n                                  height={24}\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                  strokeWidth={2}\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  className=\"feather feather-book\"\r\n                                >\r\n                                  <path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\" />\r\n                                  <path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\" />\r\n                                </svg>\r\n                                Specialization Summary\r\n                              </h4>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"add-more\"\r\n                                onClick={() =>\r\n                                  arrayHelpers.push({\r\n                                    Skill: \"\",\r\n                                    HowDidYouLearn: \"\",\r\n                                    SkillDescription: \"\",\r\n                                    ExtracurricularActivities: \"\",\r\n                                  })\r\n                                }\r\n                              >\r\n                                + Add Skill\r\n                              </button>\r\n                            </div>\r\n                            <div\r\n                              className=\"content\"\r\n                              style={{ height: \"500px\", overflowX: \"scroll\" }}\r\n                            >\r\n                              {props?.values?.Specialization &&\r\n                                props?.values?.Specialization.length > 0 &&\r\n                                props?.values?.Specialization.map(\r\n                                  (friend, index) => (\r\n                                    <div key={index}>\r\n                                      <div className=\"input-block-wrap\">\r\n                                        <div className=\"form-group row\">\r\n                                          <label className=\"col-sm-1 col-form-label\">\r\n                                            {index + 1}\r\n                                          </label>\r\n                                          <div className=\"col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors\r\n                                                      ?.Specialization?.[index]\r\n                                                      ?.Skill\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Skill Name &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`Specialization.${index}.Skill`}\r\n                                                className=\"form-control\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors\r\n                                                      ?.Specialization?.[index]\r\n                                                      ?.HowDidYouLearn\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  How DidYou Learn &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`Specialization.${index}.HowDidYouLearn`}\r\n                                                className=\"form-control\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">\r\n                                                  Skill Description\r\n                                                </div>\r\n                                              </div>\r\n\r\n                                              <Field\r\n                                                name={`Specialization.${index}.SkillDescription`}\r\n                                              >\r\n                                                {({\r\n                                                  field,\r\n                                                  form: {\r\n                                                    touched,\r\n                                                    errors,\r\n                                                    setFieldValue,\r\n                                                    values,\r\n                                                  },\r\n                                                  meta,\r\n                                                }) => (\r\n                                                  <ReactQuill\r\n                                                    onChange={(html) =>\r\n                                                      setFieldValue(\r\n                                                        `Specialization.${index}.SkillDescription`,\r\n                                                        html,\r\n                                                      )\r\n                                                    }\r\n                                                    value={\r\n                                                      values?.Specialization?.[\r\n                                                        index\r\n                                                      ]?.SkillDescription\r\n                                                    }\r\n                                                    theme=\"snow\"\r\n                                                    bounds={\".app\"}\r\n                                                  />\r\n                                                )}\r\n                                              </Field>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">\r\n                                                  Extra Curricular Activities\r\n                                                </div>\r\n                                              </div>\r\n\r\n                                              <Field\r\n                                                name={`Specialization.${index}.ExtracurricularActivities`}\r\n                                              >\r\n                                                {({\r\n                                                  field,\r\n                                                  form: {\r\n                                                    touched,\r\n                                                    errors,\r\n                                                    setFieldValue,\r\n                                                    values,\r\n                                                  },\r\n                                                  meta,\r\n                                                }) => (\r\n                                                  <ReactQuill\r\n                                                    onChange={(html) =>\r\n                                                      setFieldValue(\r\n                                                        `Specialization.${index}.ExtracurricularActivities`,\r\n                                                        html,\r\n                                                      )\r\n                                                    }\r\n                                                    value={\r\n                                                      values?.Specialization?.[\r\n                                                        index\r\n                                                      ]\r\n                                                        ?.ExtracurricularActivities\r\n                                                    }\r\n                                                    theme=\"snow\"\r\n                                                    bounds={\".app\"}\r\n                                                  />\r\n                                                )}\r\n                                              </Field>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row mb-5\">\r\n                                        <div className=\"offset-sm-1 col-sm-11\">\r\n                                          <Button\r\n                                            type=\"button\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                              arrayHelpers.remove(index)\r\n                                            }\r\n                                          >\r\n                                            Delete Training\r\n                                          </Button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  ),\r\n                                )}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-9\">\r\n                                <div className=\"buttons\">\r\n                                  <Button className=\"primary-bg\" type=\"submit\">\r\n                                    Save Update\r\n                                  </Button>\r\n                                  <Button type=\"button\" onClick={handleClose}>\r\n                                    Cancel\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"edication-background details-section dashboard-section mt-5\">\r\n      <h4>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-feather\"\r\n        >\r\n          <path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\" />\r\n          <line x1={16} y1={8} x2={2} y2={22} />\r\n          <line x1={17} y1={15} x2={9} y2={15} />\r\n        </svg>\r\n        Specialization Summary\r\n      </h4>\r\n\r\n      {UserDetails?.Specialization?.map((trainging, index) => (\r\n        <div className=\"education-label\" key={index}>\r\n          <span className=\"study-year\">Skill: {trainging.Skill}</span>\r\n          <h5>\r\n            <b>Skill Description:</b> {parse(trainging.SkillDescription)}\r\n          </h5>\r\n          <h5>\r\n            <b>Extra Curricular Activities:</b>\r\n            {parse(trainging.ExtracurricularActivities)}\r\n          </h5>\r\n        </div>\r\n      ))}\r\n\r\n      <Button\r\n        type=\"Button \"\r\n        className=\"btn btn-primary edit-resume\"\r\n        onClick={handleShow}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-edit-2\"\r\n        >\r\n          <polygon points=\"16 3 21 8 8 21 3 21 3 16 16 3\" />\r\n        </svg>\r\n      </Button>\r\n\r\n      {/* Modal */}\r\n      <ModalForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Specialization;\r\n","//External Lib Import\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Field, FieldArray, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport parse from \"html-react-parser\";\r\nimport Select from \"react-select\";\r\n\r\n//Internal Lib Import\r\nimport UserRequest from \"../../../APIRequest/UserRequest\";\r\nimport { Readings } from \"../../../Fakedata\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  LanguageProficiency: Yup.array().of(\r\n    Yup.object().shape({\r\n      Language: Yup.string().required(\"Language is Required\"),\r\n      Reading: Yup.string().required(\"Reading is Required\"),\r\n      Writing: Yup.string().required(\"Writing is Required\"),\r\n      Speaking: Yup.string().required(\"Speaking is Required\"),\r\n    }),\r\n  ),\r\n});\r\n\r\nconst LanguageProficiency = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const { UserDetails } = useSelector((state) => state.User);\r\n\r\n  const ModalForm = () => {\r\n    return (\r\n      <>\r\n        <div className={show ? \"fade modal-backdrop show\" : \"\"}></div>\r\n        <div\r\n          className={\r\n            show\r\n              ? \"modal fade modal-education d-block show\"\r\n              : \"modal fade modal-education\"\r\n          }\r\n          id=\"modal-education\"\r\n          style={{ paddingRight: 17 }}\r\n        >\r\n          <div\r\n            className=\"modal-dialog\"\r\n            role=\"document\"\r\n            style={{ transform: \"none\" }}\r\n          >\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  enableReinitialize\r\n                  initialValues={UserDetails}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={(values, actions) => {\r\n                    UserRequest.UserUpdate(values).then((result) => {\r\n                      if (result) {\r\n                        UserRequest.UserDetails().then((result) => {\r\n                          if (result) {\r\n                            setShow(false);\r\n                          }\r\n                        });\r\n                      }\r\n                    });\r\n                  }}\r\n                >\r\n                  {(props) => (\r\n                    <Form>\r\n                      <FieldArray\r\n                        name=\"LanguageProficiency\"\r\n                        render={(arrayHelpers) => (\r\n                          <div>\r\n                            <div className=\"title\">\r\n                              <h4>\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width={24}\r\n                                  height={24}\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                  strokeWidth={2}\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  className=\"feather feather-book\"\r\n                                >\r\n                                  <path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\" />\r\n                                  <path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\" />\r\n                                </svg>\r\n                                Language Proficiency Summary\r\n                              </h4>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"add-more\"\r\n                                onClick={() =>\r\n                                  arrayHelpers.push({\r\n                                    Language: \"\",\r\n                                    Reading: \"\",\r\n                                    Writing: \"\",\r\n                                    Speaking: \"\",\r\n                                  })\r\n                                }\r\n                              >\r\n                                + Add Language\r\n                              </button>\r\n                            </div>\r\n                            <div\r\n                              className=\"content\"\r\n                              style={{ height: \"500px\", overflowX: \"scroll\" }}\r\n                            >\r\n                              {props?.values?.LanguageProficiency &&\r\n                                props?.values?.LanguageProficiency.length > 0 &&\r\n                                props?.values?.LanguageProficiency.map(\r\n                                  (friend, index) => (\r\n                                    <div key={index}>\r\n                                      <div className=\"input-block-wrap\">\r\n                                        <div className=\"form-group row\">\r\n                                          <label className=\"col-sm-1 col-form-label\">\r\n                                            {index + 1}\r\n                                          </label>\r\n                                          <div className=\"col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors\r\n                                                      ?.LanguageProficiency?.[\r\n                                                      index\r\n                                                    ]?.Language\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Language Name &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`LanguageProficiency.${index}.Language`}\r\n                                                className=\"form-control\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors\r\n                                                      ?.LanguageProficiency?.[\r\n                                                      index\r\n                                                    ]?.Reading\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Reading &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Select\r\n                                                className=\"form-control\"\r\n                                                isSearchable\r\n                                                closeMenuOnSelect={true}\r\n                                                defaultValue={[\r\n                                                  Readings.find(\r\n                                                    (item) =>\r\n                                                      item.value ===\r\n                                                      props?.initialValues\r\n                                                        ?.LanguageProficiency\r\n                                                        ?.Reading,\r\n                                                  ),\r\n                                                ]}\r\n                                                options={Readings}\r\n                                                onChange={(e) =>\r\n                                                  props.setFieldValue(\r\n                                                    `LanguageProficiency.${index}.Reading`,\r\n                                                    e.value,\r\n                                                  )\r\n                                                }\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors\r\n                                                      ?.LanguageProficiency?.[\r\n                                                      index\r\n                                                    ]?.Writing\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Writing &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Select\r\n                                                className=\"form-control\"\r\n                                                isSearchable\r\n                                                closeMenuOnSelect={true}\r\n                                                defaultValue={[\r\n                                                  Readings.find(\r\n                                                    (item) =>\r\n                                                      item.value ===\r\n                                                      props?.initialValues\r\n                                                        ?.LanguageProficiency\r\n                                                        ?.Writing,\r\n                                                  ),\r\n                                                ]}\r\n                                                options={Readings}\r\n                                                onChange={(e) =>\r\n                                                  props.setFieldValue(\r\n                                                    `LanguageProficiency.${index}.Writing`,\r\n                                                    e.value,\r\n                                                  )\r\n                                                }\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors\r\n                                                      ?.LanguageProficiency?.[\r\n                                                      index\r\n                                                    ]?.Speaking\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Speaking &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Select\r\n                                                className=\"form-control\"\r\n                                                isSearchable\r\n                                                closeMenuOnSelect={true}\r\n                                                defaultValue={[\r\n                                                  Readings.find(\r\n                                                    (item) =>\r\n                                                      item.value ===\r\n                                                      props?.initialValues\r\n                                                        ?.LanguageProficiency\r\n                                                        ?.Speaking,\r\n                                                  ),\r\n                                                ]}\r\n                                                options={Readings}\r\n                                                onChange={(e) =>\r\n                                                  props.setFieldValue(\r\n                                                    `LanguageProficiency.${index}.Speaking`,\r\n                                                    e.value,\r\n                                                  )\r\n                                                }\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row mb-5\">\r\n                                        <div className=\"offset-sm-1 col-sm-11\">\r\n                                          <Button\r\n                                            type=\"button\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                              arrayHelpers.remove(index)\r\n                                            }\r\n                                          >\r\n                                            Delete Language\r\n                                          </Button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  ),\r\n                                )}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-9\">\r\n                                <div className=\"buttons\">\r\n                                  <Button className=\"primary-bg\" type=\"submit\">\r\n                                    Save Update\r\n                                  </Button>\r\n                                  <Button type=\"button\" onClick={handleClose}>\r\n                                    Cancel\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"edication-background details-section dashboard-section mt-5\">\r\n      <h4>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-feather\"\r\n        >\r\n          <path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\" />\r\n          <line x1={16} y1={8} x2={2} y2={22} />\r\n          <line x1={17} y1={15} x2={9} y2={15} />\r\n        </svg>\r\n        Language Proficiency Summary\r\n      </h4>\r\n\r\n      {UserDetails?.LanguageProficiency?.map((lan, index) => (\r\n        <div className=\"education-label\" key={index}>\r\n          <h5>\r\n            <b>Language Name:</b> {lan.Language}\r\n          </h5>\r\n          <h5>\r\n            <b>Reading:</b> {lan.Reading}\r\n          </h5>\r\n          <h5>\r\n            <b>Writing:</b> {lan.Writing}\r\n          </h5>\r\n          <h5>\r\n            <b>Speaking:</b> {lan.Speaking}\r\n          </h5>\r\n        </div>\r\n      ))}\r\n\r\n      <Button\r\n        type=\"Button \"\r\n        className=\"btn btn-primary edit-resume\"\r\n        onClick={handleShow}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-edit-2\"\r\n        >\r\n          <polygon points=\"16 3 21 8 8 21 3 21 3 16 16 3\" />\r\n        </svg>\r\n      </Button>\r\n\r\n      {/* Modal */}\r\n      <ModalForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageProficiency;\r\n","//External Lib Import\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Field, FieldArray, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport Select from \"react-select\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\n//Internal Lib Import\r\nimport UserRequest from \"../../../APIRequest/UserRequest\";\r\nimport { ReferencesRelation } from \"../../../Fakedata\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  References: Yup.array().of(\r\n    Yup.object().shape({\r\n      Name: Yup.string().required(\"Name is Required\"),\r\n      Designation: Yup.string().required(\"Designation is Required\"),\r\n      Organization: Yup.string().required(\"Organization is Required\"),\r\n    }),\r\n  ),\r\n});\r\n\r\nconst References = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const { UserDetails } = useSelector((state) => state.User);\r\n\r\n  const ModalForm = () => {\r\n    return (\r\n      <>\r\n        <div className={show ? \"fade modal-backdrop show\" : \"\"}></div>\r\n        <div\r\n          className={\r\n            show\r\n              ? \"modal fade modal-education d-block show\"\r\n              : \"modal fade modal-education\"\r\n          }\r\n          id=\"modal-education\"\r\n          style={{ paddingRight: 17 }}\r\n        >\r\n          <div\r\n            className=\"modal-dialog\"\r\n            role=\"document\"\r\n            style={{ transform: \"none\" }}\r\n          >\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-body\">\r\n                <Formik\r\n                  enableReinitialize\r\n                  initialValues={UserDetails}\r\n                  validationSchema={validationSchema}\r\n                  onSubmit={(values, actions) => {\r\n                    UserRequest.UserUpdate(values).then((result) => {\r\n                      if (result) {\r\n                        UserRequest.UserDetails().then((result) => {\r\n                          if (result) {\r\n                            setShow(false);\r\n                          }\r\n                        });\r\n                      }\r\n                    });\r\n                  }}\r\n                >\r\n                  {(props) => (\r\n                    <Form>\r\n                      <FieldArray\r\n                        name=\"References\"\r\n                        render={(arrayHelpers) => (\r\n                          <div>\r\n                            <div className=\"title\">\r\n                              <h4>\r\n                                <svg\r\n                                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                                  width={24}\r\n                                  height={24}\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                  strokeWidth={2}\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  className=\"feather feather-book\"\r\n                                >\r\n                                  <path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\" />\r\n                                  <path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\" />\r\n                                </svg>\r\n                                Reference Proficiency Summary\r\n                              </h4>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"add-more\"\r\n                                onClick={() =>\r\n                                  arrayHelpers.push({\r\n                                    Name: \"\",\r\n                                    Designation: \"\",\r\n                                    Organization: \"\",\r\n                                    Email: \"\",\r\n                                    Relation: \"\",\r\n                                    Mobile: \"\",\r\n                                    PhoneOff: \"\",\r\n                                    Address: \"\",\r\n                                  })\r\n                                }\r\n                              >\r\n                                + Add Reference\r\n                              </button>\r\n                            </div>\r\n                            <div\r\n                              className=\"content\"\r\n                              style={{ height: \"500px\", overflowX: \"scroll\" }}\r\n                            >\r\n                              {props?.values?.References &&\r\n                                props?.values?.References.length > 0 &&\r\n                                props?.values?.References.map(\r\n                                  (friend, index) => (\r\n                                    <div key={index}>\r\n                                      <div className=\"input-block-wrap\">\r\n                                        <div className=\"form-group row\">\r\n                                          <label className=\"col-sm-1 col-form-label\">\r\n                                            {index + 1}\r\n                                          </label>\r\n                                          <div className=\"col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors?.References?.[\r\n                                                      index\r\n                                                    ]?.Name\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Reference Name &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`References.${index}.Name`}\r\n                                                className=\"form-control\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors?.References?.[\r\n                                                      index\r\n                                                    ]?.Designation\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Designation &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`References.${index}.Designation`}\r\n                                                className=\"form-control\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div\r\n                                                  className={\r\n                                                    props?.errors?.References?.[\r\n                                                      index\r\n                                                    ]?.Organization\r\n                                                      ? \"input-group-text bg-danger text-white\"\r\n                                                      : \"input-group-text\"\r\n                                                  }\r\n                                                >\r\n                                                  Organization &nbsp;\r\n                                                  <span className=\"text-danger\">\r\n                                                    *\r\n                                                  </span>\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`References.${index}.Organization`}\r\n                                                className=\"form-control\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">\r\n                                                  Email &nbsp;\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`References.${index}.Email`}\r\n                                                className=\"form-control\"\r\n                                                type=\"email\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">\r\n                                                  Mobile &nbsp;\r\n                                                </div>\r\n                                              </div>\r\n                                              <PhoneInput\r\n                                                country={\"bd\"}\r\n                                                className=\"input-group-text\"\r\n                                                onChange={(phone) =>\r\n                                                  props.setFieldValue(\r\n                                                    `References.${index}.Mobile`,\r\n                                                    phone,\r\n                                                  )\r\n                                                }\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">\r\n                                                  Phone Off &nbsp;\r\n                                                </div>\r\n                                              </div>\r\n                                              <PhoneInput\r\n                                                className=\"form-control\"\r\n                                                country={\"bd\"}\r\n                                                value={\r\n                                                  props?.initialValues\r\n                                                    ?.References?.PhoneOff\r\n                                                }\r\n                                                onChange={(phone) =>\r\n                                                  props.setFieldValue(\r\n                                                    `References.${index}.PhoneOff`,\r\n                                                    phone,\r\n                                                  )\r\n                                                }\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">\r\n                                                  Relation &nbsp;\r\n                                                </div>\r\n                                              </div>\r\n\r\n                                              <Select\r\n                                                className=\"form-control\"\r\n                                                isSearchable\r\n                                                closeMenuOnSelect={true}\r\n                                                defaultValue={[\r\n                                                  ReferencesRelation[\r\n                                                    ReferencesRelation.findIndex(\r\n                                                      (item) =>\r\n                                                        item.value ===\r\n                                                        props?.initialValues\r\n                                                          ?.Relation,\r\n                                                    )\r\n                                                  ],\r\n                                                ]}\r\n                                                options={ReferencesRelation}\r\n                                                onChange={(e) =>\r\n                                                  props.setFieldValue(\r\n                                                    `References.${index}.Relation`,\r\n                                                    e.value,\r\n                                                  )\r\n                                                }\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                          <div className=\"offset-sm-1 col-sm-11\">\r\n                                            <div className=\"input-group\">\r\n                                              <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text\">\r\n                                                  Address &nbsp;\r\n                                                </div>\r\n                                              </div>\r\n                                              <Field\r\n                                                name={`References.${index}.Address`}\r\n                                                className=\"form-control\"\r\n                                                as=\"textarea\"\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n\r\n                                      <div className=\"row mb-5\">\r\n                                        <div className=\"offset-sm-1 col-sm-11\">\r\n                                          <Button\r\n                                            type=\"button\"\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                              arrayHelpers.remove(index)\r\n                                            }\r\n                                          >\r\n                                            Delete Reference\r\n                                          </Button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  ),\r\n                                )}\r\n                            </div>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-9\">\r\n                                <div className=\"buttons\">\r\n                                  <Button className=\"primary-bg\" type=\"submit\">\r\n                                    Save Update\r\n                                  </Button>\r\n                                  <Button type=\"button\" onClick={handleClose}>\r\n                                    Cancel\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      />\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"edication-background details-section dashboard-section mt-5\">\r\n      <h4>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-feather\"\r\n        >\r\n          <path d=\"M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z\" />\r\n          <line x1={16} y1={8} x2={2} y2={22} />\r\n          <line x1={17} y1={15} x2={9} y2={15} />\r\n        </svg>\r\n        Reference Summary\r\n      </h4>\r\n\r\n      {UserDetails?.References?.map((lan, index) => (\r\n        <div className=\"education-label\" key={index}>\r\n          <h5>\r\n            <b>Reference Name:</b> {lan.Name}\r\n          </h5>\r\n          <h5>\r\n            <b>Reference Designation:</b> {lan.Designation}\r\n          </h5>\r\n          <h5>\r\n            <b>Reference Organization:</b> {lan.Organization}\r\n          </h5>\r\n          <h5>\r\n            <b>Reference Email:</b> {lan.Email}\r\n          </h5>\r\n        </div>\r\n      ))}\r\n\r\n      <Button\r\n        type=\"Button \"\r\n        className=\"btn btn-primary edit-resume\"\r\n        onClick={handleShow}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width={24}\r\n          height={24}\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth={2}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-edit-2\"\r\n        >\r\n          <polygon points=\"16 3 21 8 8 21 3 21 3 16 16 3\" />\r\n        </svg>\r\n      </Button>\r\n\r\n      {/* Modal */}\r\n      <ModalForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default References;\r\n","//External Lib Import\r\nimport React from \"react\";\r\nimport { Tab, Tabs } from \"react-bootstrap\";\r\n\r\n//Internal Lib Import\r\nimport Specialization from \"./Specialization\";\r\nimport LanguageProficiency from \"./LanguageProficiency\";\r\nimport References from \"./References\";\r\n\r\nconst OtherInformation = () => {\r\n  return (\r\n    <Tabs defaultActiveKey=\"Specialization\" className=\"mb-3 faq-tab\">\r\n      <Tab eventKey=\"Specialization\" title=\"Specialization\">\r\n        <Specialization />\r\n      </Tab>\r\n      <Tab eventKey=\"LanguageProficiency\" title=\"Language Proficiency\">\r\n        <LanguageProficiency />\r\n      </Tab>\r\n      <Tab eventKey=\"References\" title=\"References\">\r\n        <References />\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default OtherInformation;\r\n","//External Lib Import\r\nimport { lazy, Suspense, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { FaEdit, FaHome, FaPowerOff, FaTrashAlt } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Internal Lib Import\r\nimport { SetLogout } from \"../../redux/slices/AuthSlice\";\r\nimport LazyLoader from \"../Common/LazyLoader\";\r\nimport OtherInformation from \"./OtherInformation/OtherInformation\";\r\nconst Employment = lazy(() => import(\"./Employment/Employment\"));\r\nconst PersonalInfo = lazy(() => import(\"./PersonalInfo/PersonalInfo\"));\r\nconst EducationTraining = lazy(() =>\r\n  import(\"./EducationTraining/EducationTraining\"),\r\n);\r\n\r\nconst EditProfile = () => {\r\n  const [category, setCategory] = useState(\"PersonalInfo\");\r\n  const dispatch = useDispatch();\r\n  const { UserDetails } = useSelector((state) => state.User);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"alice-bg padding-top-70 padding-bottom-70\">\r\n        <Container>\r\n          <Row>\r\n            <Col md={6}>\r\n              <div className=\"breadcrumb-area\">\r\n                <h1>Candidates Dashboard</h1>\r\n                <nav aria-label=\"breadcrumb\">\r\n                  <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">\r\n                      <Link to=\"/dashboard\">Candidates Dashboard</Link>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item active\">\r\n                      <Link to=\"/account\">Personal Info</Link>\r\n                    </li>\r\n                  </ol>\r\n                </nav>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <div className=\"alice-bg section-padding-bottom\">\r\n        <Container className=\"no-gliters\">\r\n          <Row className=\"no-gliters\">\r\n            <Col>\r\n              <div className=\"dashboard-container\">\r\n                <div className=\"dashboard-content-wrapper\">\r\n                  <ViewProfileForm categoryName={category} />\r\n                </div>\r\n                <div className=\"dashboard-sidebar\">\r\n                  <div className=\"user-info\">\r\n                    <div className=\"thumb\">\r\n                      <img\r\n                        src={UserDetails?.Image}\r\n                        className=\"img-fluid\"\r\n                        alt={UserDetails?.Email}\r\n                      />\r\n                    </div>\r\n                    <div className=\"user-body\">\r\n                      <h5>\r\n                        {UserDetails?.FirstName}\r\n                        {UserDetails?.LastName}\r\n                      </h5>\r\n                      <span>{UserDetails?.Email}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"dashboard-menu\">\r\n                    <ul>\r\n                      <li>\r\n                        <Link\r\n                          className={\r\n                            category === \"PersonalInfo\" ? \"active\" : \"\"\r\n                          }\r\n                          onClick={() => setCategory(\"PersonalInfo\")}\r\n                        >\r\n                          <i className=\"mr-3\">\r\n                            <FaHome />\r\n                          </i>\r\n                          Personal Info\r\n                        </Link>\r\n                      </li>\r\n                      <li>\r\n                        <Link\r\n                          className={\r\n                            category === \"EducationTraining\" ? \"active\" : \"\"\r\n                          }\r\n                          onClick={() => setCategory(\"EducationTraining\")}\r\n                        >\r\n                          <i className=\"mr-3\">\r\n                            <FaEdit />\r\n                          </i>\r\n                          Education/Training\r\n                        </Link>\r\n                      </li>\r\n                      <li>\r\n                        <Link\r\n                          className={category === \"Employment\" ? \"active\" : \"\"}\r\n                          onClick={() => setCategory(\"Employment\")}\r\n                        >\r\n                          <i className=\"mr-3\">\r\n                            <FaEdit />\r\n                          </i>\r\n                          Employment\r\n                        </Link>\r\n                      </li>\r\n                      <li>\r\n                        <Link\r\n                          className={\r\n                            category === \"OtherInformation\" ? \"active\" : \"\"\r\n                          }\r\n                          onClick={() => setCategory(\"OtherInformation\")}\r\n                        >\r\n                          <i className=\"mr-3\">\r\n                            <FaEdit />\r\n                          </i>\r\n                          Other Information\r\n                        </Link>\r\n                      </li>\r\n                    </ul>\r\n                    <ul className=\"delete\">\r\n                      <li>\r\n                        <Link onClick={(e) => dispatch(SetLogout())}>\r\n                          <i className=\"mr-3\">\r\n                            <FaPowerOff />\r\n                          </i>\r\n                          Logout\r\n                        </Link>\r\n                      </li>\r\n                      <li>\r\n                        <Link>\r\n                          <i className=\"mr-3\">\r\n                            <FaTrashAlt />\r\n                          </i>\r\n                          Delete Profile\r\n                        </Link>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n\r\nconst ViewProfileForm = ({ categoryName }) => {\r\n  if (categoryName === \"PersonalInfo\") {\r\n    return (\r\n      <Suspense fallback={<LazyLoader />}>\r\n        <PersonalInfo />\r\n      </Suspense>\r\n    );\r\n  }\r\n  if (categoryName === \"EducationTraining\") {\r\n    return (\r\n      <Suspense fallback={<LazyLoader />}>\r\n        <EducationTraining />\r\n      </Suspense>\r\n    );\r\n  }\r\n  if (categoryName === \"Employment\") {\r\n    return (\r\n      <Suspense fallback={<LazyLoader />}>\r\n        <Employment />\r\n      </Suspense>\r\n    );\r\n  }\r\n  if (categoryName === \"OtherInformation\") {\r\n    return (\r\n      <Suspense fallback={<LazyLoader />}>\r\n        <OtherInformation />\r\n      </Suspense>\r\n    );\r\n  }\r\n};\r\n\r\n// const ViewProfileForm = ({ categoryName, values }) => {\r\n//   if (categoryName === \"PersonalInfo\") {\r\n//     return <Personal {...values} />;\r\n//   }\r\n//   if (categoryName === \"EducationTraining\") {\r\n//     return <EducationTraining {...values} />;\r\n//   }\r\n//   if (categoryName === \"Employment\") {\r\n//     return <Employment {...values} />;\r\n//   }\r\n//   if (categoryName === \"OtherInformation\") {\r\n//     return <OtherInformation {...values} />;\r\n//   }\r\n//   if (categoryName === \"Photograph\") {\r\n//     return <Photograph {...values} />;\r\n//   }\r\n// };\r\n"],"names":["UserRequest","RestClient","data","store","SetUserDetails","Email","ToastMessage","message","SessionHelper","Otp","PostBody","validationSchema","Yup","shape","Specialization","of","Skill","required","HowDidYouLearn","useState","show","setShow","handleClose","UserDetails","useSelector","state","User","ModalForm","className","id","style","paddingRight","role","transform","enableReinitialize","initialValues","onSubmit","values","actions","then","result","props","name","render","arrayHelpers","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","type","onClick","push","SkillDescription","ExtracurricularActivities","overflowX","length","map","friend","index","errors","field","form","setFieldValue","touched","meta","onChange","html","value","theme","bounds","Button","variant","remove","x1","y1","x2","y2","trainging","parse","points","LanguageProficiency","Language","Reading","Writing","Speaking","isSearchable","closeMenuOnSelect","defaultValue","Readings","item","options","e","lan","References","Name","Designation","Organization","Relation","Mobile","PhoneOff","Address","country","phone","ReferencesRelation","as","Tabs","defaultActiveKey","Tab","eventKey","title","Employment","lazy","PersonalInfo","EducationTraining","category","setCategory","dispatch","useDispatch","Container","Row","Col","md","to","ViewProfileForm","categoryName","src","Image","alt","FirstName","LastName","SetLogout","Suspense","fallback","LazyLoader"],"sourceRoot":""}